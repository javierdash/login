{"ast":null,"code":"var _jsxFileName = \"/Users/Lucy/Desktop/loginjavi/src/components/Login.js\";\nimport React from 'react';\nimport swal from '@sweetalert/with-react';\nimport axios from 'axios';\nimport { Redirect, useHistory } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const token = localStorage.getItem('token');\n  const endpoint = 'http://challenge-react.alkemy.org/';\n  const handleSubmit = e => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    if (email === \"\" || password === \"\") {\n      swal( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Los campos no pueden estar vacios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }, this));\n      return;\n    }\n    if (!regex.test(email)) {\n      swal(\"Debes ingresar un mail válido\");\n      return;\n    }\n    if (email !== 'challenge@alkemy.org' || password !== \"react\") {\n      swal(\"Los datos ingresados no son correctos\");\n      return;\n    }\n    axios.post(endpoint, {\n      email,\n      password\n    }).then(res => {\n      const token = res.data.token;\n      localStorage.setItem('token', token);\n    });\n    swal(\"bienvenido!\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingres\\xE1 tu e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingres\\xE1 tu contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","swal","axios","Redirect","useHistory","Login","regex","token","localStorage","getItem","endpoint","handleSubmit","e","preventDefault","email","target","value","password","test","post","then","res","data","setItem"],"sources":["/Users/Lucy/Desktop/loginjavi/src/components/Login.js"],"sourcesContent":["import React from 'react'\nimport swal from '@sweetalert/with-react'\nimport axios from 'axios';\nimport {Redirect, useHistory} from 'react'\n\nconst Login = () => {\n \n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  const token = localStorage.getItem('token')\n\n  const endpoint = 'http://challenge-react.alkemy.org/'\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const email = e.target.email.value\n    const password = e.target.password.value\n\n    if(email === \"\" || password === \"\") {\n      swal(<h2>Los campos no pueden estar vacios</h2>)\n      return;\n    }\n\n    if(!regex.test(email)) {\n      swal(\"Debes ingresar un mail válido\")\n      return;\n    }\n\n    if(email !== 'challenge@alkemy.org' || password!== \"react\") {\n      swal(\"Los datos ingresados no son correctos\")\n      return;\n    }\n\n    axios\n      .post(endpoint, {email, password})\n      .then(res => {\n        const token = res.data.token\n        localStorage.setItem('token', token)\n      })\n      \n\n    swal(\"bienvenido!\")\n\n  }\n\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <label>Ingresá tu e-mail</label>\n      <input type=\"text\" name=\"email\"></input> <br />\n      <label>Ingresá tu contraseña</label>\n      <input type=\"text\" name=\"password\"></input> <br />\n      <button>enviar</button>\n    </form>\n    </>\n  )\n}\n\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAAA;AAAA;AAE1C,MAAMC,KAAK,GAAG,MAAM;EAElB,MAAMC,KAAK,GAAG,+CAA+C;EAC7D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,QAAQ,GAAG,oCAAoC;EAErD,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK,CAACE,KAAK;IAClC,MAAMC,QAAQ,GAAGL,CAAC,CAACG,MAAM,CAACE,QAAQ,CAACD,KAAK;IAExC,IAAGF,KAAK,KAAK,EAAE,IAAIG,QAAQ,KAAK,EAAE,EAAE;MAClChB,IAAI,eAAC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0C,CAAC;MAChD;IACF;IAEA,IAAG,CAACK,KAAK,CAACY,IAAI,CAACJ,KAAK,CAAC,EAAE;MACrBb,IAAI,CAAC,+BAA+B,CAAC;MACrC;IACF;IAEA,IAAGa,KAAK,KAAK,sBAAsB,IAAIG,QAAQ,KAAI,OAAO,EAAE;MAC1DhB,IAAI,CAAC,uCAAuC,CAAC;MAC7C;IACF;IAEAC,KAAK,CACFiB,IAAI,CAACT,QAAQ,EAAE;MAACI,KAAK;MAAEG;IAAQ,CAAC,CAAC,CACjCG,IAAI,CAACC,GAAG,IAAI;MACX,MAAMd,KAAK,GAAGc,GAAG,CAACC,IAAI,CAACf,KAAK;MAC5BC,YAAY,CAACe,OAAO,CAAC,OAAO,EAAEhB,KAAK,CAAC;IACtC,CAAC,CAAC;IAGJN,IAAI,CAAC,aAAa,CAAC;EAErB,CAAC;EAED,oBACE;IAAA,uBACA;MAAM,QAAQ,EAAEU,YAAa;MAAA,wBAC3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgC,eAChC;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoC,eACpC;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eAClD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB;IAAA;MAAA;MAAA;MAAA;IAAA;EAClB,iBACJ;AAEP,CAAC;AAAA,KAlDKN,KAAK;AAoDX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}