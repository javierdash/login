{"ast":null,"code":"var _jsxFileName = \"/Users/Lucy/Desktop/loginjavi/src/components/Login.js\";\nimport React from 'react';\nimport swal from '@sweetalert/with-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const handleSubmit = e => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    if (email === \"\" || password === \"\") {\n      swal( /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Los campos no pueden estar vacios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }, this));\n      return;\n    }\n    if (!regex.test(email)) {\n      swal(\"Debes ingresar un mail válido\");\n      return;\n    }\n    if (email !== 'challenge@alkemy.org' || password !== \"react\") {\n      swal(\"Los datos ingresados no son correctos\");\n      return;\n    }\n    swal(\"bienvenido!\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingres\\xE1 tu e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Ingres\\xE1 tu contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","swal","axios","Login","regex","handleSubmit","e","preventDefault","email","target","value","password","test"],"sources":["/Users/Lucy/Desktop/loginjavi/src/components/Login.js"],"sourcesContent":["import React from 'react'\nimport swal from '@sweetalert/with-react'\nimport axios from 'axios';\n\nconst Login = () => {\n \n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const email = e.target.email.value\n    const password = e.target.password.value\n\n    if(email === \"\" || password === \"\") {\n      swal(<h2>Los campos no pueden estar vacios</h2>)\n      return;\n    }\n\n    if(!regex.test(email)) {\n      swal(\"Debes ingresar un mail válido\")\n      return;\n    }\n\n    if(email !== 'challenge@alkemy.org' || password!== \"react\") {\n      swal(\"Los datos ingresados no son correctos\")\n      return;\n    }\n\n\n\n    swal(\"bienvenido!\")\n\n  }\n\n  return (\n    <>\n    <form onSubmit={handleSubmit}>\n      <label>Ingresá tu e-mail</label>\n      <input type=\"text\" name=\"email\"></input> <br />\n      <label>Ingresá tu contraseña</label>\n      <input type=\"text\" name=\"password\"></input> <br />\n      <button>enviar</button>\n    </form>\n    </>\n  )\n}\n\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,KAAK,GAAG,MAAM;EAElB,MAAMC,KAAK,GAAG,+CAA+C;EAG7D,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK,CAACE,KAAK;IAClC,MAAMC,QAAQ,GAAGL,CAAC,CAACG,MAAM,CAACE,QAAQ,CAACD,KAAK;IAExC,IAAGF,KAAK,KAAK,EAAE,IAAIG,QAAQ,KAAK,EAAE,EAAE;MAClCV,IAAI,eAAC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0C,CAAC;MAChD;IACF;IAEA,IAAG,CAACG,KAAK,CAACQ,IAAI,CAACJ,KAAK,CAAC,EAAE;MACrBP,IAAI,CAAC,+BAA+B,CAAC;MACrC;IACF;IAEA,IAAGO,KAAK,KAAK,sBAAsB,IAAIG,QAAQ,KAAI,OAAO,EAAE;MAC1DV,IAAI,CAAC,uCAAuC,CAAC;MAC7C;IACF;IAIAA,IAAI,CAAC,aAAa,CAAC;EAErB,CAAC;EAED,oBACE;IAAA,uBACA;MAAM,QAAQ,EAAEI,YAAa;MAAA,wBAC3B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgC,eAChC;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoC,eACpC;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAS,oBAAC;QAAA;QAAA;QAAA;MAAA,QAAM,eAClD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB;IAAA;MAAA;MAAA;MAAA;IAAA;EAClB,iBACJ;AAEP,CAAC;AAAA,KA1CKF,KAAK;AA4CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}