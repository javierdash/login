[{"/Users/Lucy/Desktop/loginjavi/src/index.js":"1","/Users/Lucy/Desktop/loginjavi/src/App.js":"2","/Users/Lucy/Desktop/loginjavi/src/components/Login.js":"3","/Users/Lucy/Desktop/loginjavi/src/components/Listado.js":"4","/Users/Lucy/Desktop/loginjavi/src/components/Header.js":"5","/Users/Lucy/Desktop/loginjavi/src/components/Detalle.js":"6","/Users/Lucy/Desktop/loginjavi/src/components/Buscador.js":"7","/Users/Lucy/Desktop/loginjavi/src/components/Resultado.js":"8"},{"size":288,"mtime":1669376292000,"results":"9","hashOfConfig":"10"},{"size":613,"mtime":1669400030000,"results":"11","hashOfConfig":"10"},{"size":1579,"mtime":1669402105000,"results":"12","hashOfConfig":"10"},{"size":1280,"mtime":1669389377000,"results":"13","hashOfConfig":"10"},{"size":539,"mtime":1669402028000,"results":"14","hashOfConfig":"10"},{"size":1596,"mtime":1669632502000,"results":"15","hashOfConfig":"10"},{"size":701,"mtime":1669399980000,"results":"16","hashOfConfig":"10"},{"size":1368,"mtime":1669632193000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"ia83xq",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"/Users/Lucy/Desktop/loginjavi/src/index.js",[],[],[],"/Users/Lucy/Desktop/loginjavi/src/App.js",[],[],"/Users/Lucy/Desktop/loginjavi/src/components/Login.js",["46","47"],[],"import React from 'react'\nimport swal from '@sweetalert/with-react'\nimport axios from 'axios';\nimport {useHistory, Redirect} from 'react-router-dom'\n\nconst Login = () => {\n \n  const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n  const history = useHistory()\n  const token = localStorage.getItem('token')\n  const endpoint = 'http://challenge-react.alkemy.org/'\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const email = e.target.email.value\n    const password = e.target.password.value\n\n    if(email === \"\" || password === \"\") {\n      swal(<h2>Los campos no pueden estar vacios</h2>)\n      return;\n    }\n\n    if(!regex.test(email)) {\n      swal(\"Debes ingresar un mail válido\")\n      return;\n    }\n\n    if(email !== 'challenge@alkemy.org' || password!== \"react\") {\n      swal(\"Los datos ingresados no son correctos\")\n      return;\n    }\n\n    axios\n      .post(endpoint, {email, password})\n      .then(res => {\n        const token = res.data.token\n        localStorage.setItem('token', token)\n        history.push('/listado')\n      })\n      .catch(e => {\n        swal(\"hubo errores, intenta luego\")\n      })      \n  }\n\n  return (\n    <>\n    {token && <Redirect to=\"/listado\"/>}\n    <h3>Para acceder por favor ingresá los datos solicitados:</h3>\n    <form onSubmit={handleSubmit}>\n      <label>Ingresá tu email</label>\n      <input type=\"text\" name=\"email\"></input> <br />\n      <label>Ingresá tu contraseña</label>\n      <input type=\"text\" name=\"password\"></input> <br />\n      <button>enviar</button>\n    </form>\n    </>\n  )\n}\n\nexport default Login","/Users/Lucy/Desktop/loginjavi/src/components/Listado.js",["48"],[],"import {Redirect, Link} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport '../estilos.css'\n\nconst Listado = () => {\n  \n  const token = localStorage.getItem('token')\n\n  const [moviesList, setMoviesList] = useState([])\n\n  useEffect(() => {\n    const endpoint = \"https://api.themoviedb.org/3/discover/movie?api_key=c5256bd6913284c73d535a2dd158d799&language=es-ES\"\n    axios\n      .get(endpoint)\n      .then(res => {\n        //console.log(res.data.results)\n        const apiData = res.data.results\n        setMoviesList(apiData)\n      })\n    }, [])\n  \n\n  return (\n    <>\n    {!token && <Redirect to=\"/\"/>}\n    <div className=\"row\">\n    {moviesList.map((el) => {\n      return(\n        <div className=\"col-3\">\n        <div className=\"card\">\n        <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`} alt=\"Card image cap\"/>\n        <div className=\"card-body\">\n        <h5 className=\"card-title\">{el.title.substring(0, 25)}</h5>\n        <p className=\"card-text\">{el.overview.substring(0, 105)}...</p>\n        <Link to={`/detalle/?movieID=${el.id}`} className=\"btn btn-primary\">Detalle</Link>\n        </div>\n      </div>\n      </div>\n      )\n    }\n    )}\n    </div>\n    </>\n  )\n}\n\nexport default Listado","/Users/Lucy/Desktop/loginjavi/src/components/Header.js",[],[],"/Users/Lucy/Desktop/loginjavi/src/components/Detalle.js",["49","50"],[],"/Users/Lucy/Desktop/loginjavi/src/components/Buscador.js",[],[],"/Users/Lucy/Desktop/loginjavi/src/components/Resultado.js",["51"],[],"import React from 'react'\nimport axios from 'axios'\nimport {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\nconst Resultado = () => {\n  \n  const query = new URLSearchParams(window.location.search)\n  let palabraBuscada = query.get('palabra') \n  console.log(palabraBuscada)\n\n  const [results, setResults] = useState([])\n\n  useEffect(() => {\n    const endpoint = `https://api.themoviedb.org/3/search/movie?query=${palabraBuscada}&api_key=c5256bd6913284c73d535a2dd158d799&language=es-ES`\n    axios\n      .get(endpoint)\n      .then(res => {\n        const apiResponse = res.data.results\n        console.log(apiResponse)\n        setResults(apiResponse)\n      })   \n    \n    }, [palabraBuscada])\n  \n  return (\n    <>\n    <div className=\"row\">\n    {results.map((el) => {\n      return(\n        <div className=\"col-4\">\n        <div className=\"card my-4\">\n        <img className=\"card-img-top\" src={`https://image.tmdb.org/t/p/w500/${el.poster_path}`} alt=\"Card image cap\"/>\n        <div className=\"card-body\">\n        <h5 className=\"card-title\">{el.title.substring(0, 25)}</h5>\n        <p className=\"card-text\">{el.overview.substring(0, 105)}...</p>\n        <Link to={`/detalle/?movieID=${el.id}`} className=\"btn btn-primary\">Detalle</Link>\n        </div>\n      </div>\n      </div>\n      )\n    }\n    )}\n    </div>\n    </>\n  )\n}\n\nexport default Resultado;",{"ruleId":"52","severity":1,"message":"53","line":8,"column":24,"nodeType":"54","messageId":"55","endLine":8,"endColumn":25,"suggestions":"56"},{"ruleId":"52","severity":1,"message":"53","line":8,"column":40,"nodeType":"54","messageId":"55","endLine":8,"endColumn":41,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":32,"column":9,"nodeType":"60","endLine":32,"endColumn":119},{"ruleId":"61","severity":1,"message":"62","line":27,"column":8,"nodeType":"63","endLine":27,"endColumn":18,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"59","line":37,"column":13,"nodeType":"60","endLine":37,"endColumn":126},{"ruleId":"58","severity":1,"message":"59","line":33,"column":9,"nodeType":"60","endLine":33,"endColumn":119},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["65","66"],["67","68"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movieID'. Either include it or remove the dependency array.","ArrayExpression",["69"],{"messageId":"70","fix":"71","desc":"72"},{"messageId":"73","fix":"74","desc":"75"},{"messageId":"70","fix":"76","desc":"72"},{"messageId":"73","fix":"77","desc":"75"},{"desc":"78","fix":"79"},"removeEscape",{"range":"80","text":"81"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"82","text":"83"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"84","text":"81"},{"range":"85","text":"83"},"Update the dependencies array to be: [movieID, setMovie]",{"range":"86","text":"87"},[197,198],"",[197,197],"\\",[213,214],[213,213],[796,806],"[movieID, setMovie]"]